language: go

go:
  - '1.12.x'

go_import_path: k8s.io/ingress-nginx

services:
  - docker

env:
  global:
    - REGISTRY=index.docker.io/shopify

jobs:
  include:
    - stage: Static Check
      before_script:
        - go get golang.org/x/lint/golint
      script:
        - build/run-in-docker.sh luacheck --codes -q rootfs/etc/nginx/lua/
        - make static-check
    - stage: Lua Unit Test
      script:
        - build/run-in-docker.sh make lua-test
    - stage: Coverage
      script:
        - build/run-in-docker.sh make cover
    - stage: e2e
      if: commit_message !~ /(skip-e2e)/
      before_script:
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        - curl -Lo kind https://github.com/kubernetes-sigs/kind/releases/download/v0.4.0/kind-linux-amd64 && chmod +x kind && sudo mv kind /usr/local/bin/
        - go get github.com/onsi/ginkgo/ginkgo
      script: make kind-e2e-test
    - stage: publish amd64
      if: type = push AND branch = master AND repo = Shopify/ingress AND env(COMPONENT) = "ingress-controller"
      script:
        - .travis/publish.sh amd64
